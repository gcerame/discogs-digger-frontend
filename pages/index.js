import { useState } from "react";
import Release from "../components/release";
import { Header } from "../components/header";
import SearchForm from "../components/searchForm";
import Link from "next/link";


export default function Home () {
    const [formData, setFormData] = useState({});
    const [releases, setReleases] = useState([]);
    const [error, setError] = useState(null);
    const [pagination, setPagination] = useState({});

    const fetchData = async (searchQuery) => {
        try {
            const APIURL = `http://localhost:3001/search/?${searchQuery}`;
            const response = await fetch(APIURL);
            const searchResults = await response.json();
            if (searchResults.error) {
                setError(searchResults);
                return;
            }
            setPagination(searchResults.pagination);
            setReleases(searchResults.releases);
        } catch (e) {
            setError(e);
        }
    };

    const handleFormSubmit = async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData);

        if (Object.values(data).every(x => x === '')) {
            setError({ message: 'Please enter search parameters' });
            return;
        }

        Object.keys(data).forEach((key) => data[key] === '' && delete data[key]);
        const searchQuery = new URLSearchParams(data).toString();
        await fetchData(searchQuery);
        setFormData(data);
    };

    const mapReleasesToComponent = () => {
        return releases.map((release) => {
            return (
                <Release release={release} key={release.id}/>
            );
        });
    };

    return (
        <>
            <header>
                <title>discogs-digger</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </header>

            <main>
                <Header />
                <SearchForm handleSubmit={handleFormSubmit} formData={formData} />
                <div className="grid align-center justify-center gap-2 w-full">
                    {error !== null ? (
                        <p>{error.message}</p>
                    ) : (
                        mapReleasesToComponent()
                    )}
                </div>
                <nav>
                    <ul className="pagination">
                        {pagination.urls && pagination.urls.prev && (
                            <li>
                                <Link
                                    href={`?${new URLSearchParams(formData).toString()}&page=${pagination.page - 1}`}
                                    as={`/search?${new URLSearchParams(formData).toString()}&page=${pagination.page - 1}`}
                                >
                                    <a>Previous</a>
                                    Certainly! Here is the rest of the updated code:

                                    Copy code
                                </Link>
                            </li>
                        )}
                        {pagination.urls && pagination.urls.next && (
                            <li>
                                <Link
                                    href={`?${new URLSearchParams(formData).toString()}&page=${pagination.page + 1}`}
                                    as={`/search?${new URLSearchParams(formData).toString()}&page=${pagination.page + 1}`}
                                >
                                    <a>Next</a>
                                </Link>
                            </li>
                        )}
                    </ul>
                </nav>
            </main>
        </>
    );
}
