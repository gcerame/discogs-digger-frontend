import { useState } from "react";
import Release from "../components/release";
import { Header } from "../components/header";
import SearchForm from "../components/searchForm";
import { Container } from "@chakra-ui/react";


export default function Home () {
    const [releases, setReleases] = useState([]);
    const [error, setError] = useState(null);
    const [pagination, setPagination] = useState({});

    const fetchData = async (searchQuery) => {
        try {
            const APIURL = `http://192.168.1.33:3001/search/?${searchQuery}`;
            const response = await fetch(APIURL);
            const searchResults = await response.json();
            if (searchResults.error) {
                setError(searchResults);
                return;
            }
            setPagination(searchResults.pagination);
            setReleases(searchResults.releases);
        } catch (e) {
            setError(e);
        }
    };

    const handleFormSubmit = async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData);

        if (Object.values(data).every(x => x === '')) {
            setError({ message: 'Please enter search parameters' });
            return;
        }

        Object.keys(data).forEach((key) => data[key] === '' && delete data[key]);
        const searchQuery = new URLSearchParams(data).toString();
        await fetchData(searchQuery);

    };

    const mapReleasesToComponent = () => {
        return releases.map((release) => {
            return (
                <Release release={release} key={release.id}/>
            );
        });
    };

    return (
        <>
            <header>
                <title>discogs-digger</title>
                <meta name="description" content="Generated by create next app"/>
            </header>

            <main>
                <Header/>
                <SearchForm handleSubmit={handleFormSubmit}/>
                <Container centerContent w="100%">
                    {error !== null ? <p>{error.message}</p> : mapReleasesToComponent()}
                </Container>
            </main>
        </>);
}
